name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_backend:
    name: Build backend docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push server
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/docker-image:latest

  build_frontend:
    name: Build frontend docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push server
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/docker-image:latest

  test:
    name: Run tests and linters
    needs:
      - build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          clean: false

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          envkey_API_KEY: ${{ secrets.API_KEY }}
          file_name: .env
          fail_on_empty: false

      - run: docker-compose run server pytest test_main.py

  deploy:
    name: Deploy to Server
    runs-on: ubuntu:20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/path/to/project
            git pull git@buyhardware:${{ secrets.OWNER }}/buyhardware.git
            docker-compose up -d
